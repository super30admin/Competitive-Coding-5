//Time Complexity: O(N);
//Space Complexity: O(N);

//Approach: Idea is to perform level order traversal / BFS and return local maximum at each level


class Solution {
    public List<Integer> largestValues(TreeNode root) {
        List<Integer> result = new ArrayList<>();
        
        if(root==null){
            return result;
        }
        
        Queue<TreeNode> que = new LinkedList<>();   
        que.add(root);
        
        while(!que.isEmpty()){
            int size = que.size();
            int max = Integer.MIN_VALUE;
            for(int i = 0 ; i < size ; i++){
                
                TreeNode curr = que.poll();
                if(curr.val > max){
                    max = curr.val;
                }
                
                if(curr.left!=null){
                    que.add(curr.left);
                }
                
                if(curr.right!=null){
                    que.add(curr.right);
                }
            }
            result.add(max);
        }
        return result;
    }
}
