class Solution {
    public boolean isValidSudoku(char[][] board) {
        
        int N = 9;
        HashSet <Character>[] rowHash = new HashSet[N];
        HashSet <Character>[] colHash = new HashSet[N];
        HashSet <Character>[] boxHash = new HashSet[N];
      
        
        for(int i=0; i<9; i++)
        {
           rowHash[i]=new HashSet<>();
           colHash[i] = new HashSet<>();
           boxHash[i] = new HashSet<>(); 
            
        }
        
        for(int i=0;i<9;i++)
        {
            for(int j=0;j<9;j++)
            {
                if(board[i][j] =='.')
                {
                    continue;
                }
              else
              {
                
                    if(rowHash[i].contains(board[i][j]))
                    {
                        return false;
                    }
                    
                    rowHash[i].add(board[i][j]);
                    
                    if(colHash[j].contains(board[i][j]))
                    {
                        return false;
                    }
                    
                    colHash[j].add(board[i][j]);
                    
                    int index= (i / 3) * 3 + j / 3;
                    
                    if(boxHash[index].contains(board[i][j]))
                    {
                        return false;
                    }
                    boxHash[index].add(board[i][j]);
                    
            
              }     
                
                
                
            }
        }
      
     return true;    
        
    }
}
