Time complexity: O(n)
Space complexity: O(n)
Did this code submitted successfully on leetcode: Yes

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List<Integer> largestValues(TreeNode root) {
        
        if(root==null)
            return new ArrayList<>();
        
        List<Integer> res = new ArrayList<>();
        Queue<TreeNode> q = new LinkedList<>();
        int maxVal = Integer.MIN_VALUE;
        
        q.add(root);
        
        while(!q.isEmpty()){
            TreeNode temp = new TreeNode();
            int size = q.size();
            
            for(int i=0;i<size;i++){
                temp = q.poll();
                
                maxVal = Math.max(temp.val, maxVal);
                
                if(temp.left!=null) q.add(temp.left);
                if(temp.right!=null) q.add(temp.right);
            }
            
            res.add(maxVal);
            maxVal = Integer.MIN_VALUE;
        }
        
        return res;
    }
}
