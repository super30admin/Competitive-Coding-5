//TimeComplexity O(n)
//SpaceComplexity O(n)

class Solution {
    public List<Integer> largestValues(TreeNode root) {
        Queue<TreeNode> q = new LinkedList<>();
       
        List<Integer> result = new ArrayList<>();
        if(root == null)return result;
        q.add(root);
        
            while(!q.isEmpty()){
                int size = q.size();
                int max = Integer.MIN_VALUE;
                for(int i= 0; i < size; i++){
                    TreeNode curr = q.poll();
                    max = Math.max(max,curr.val);
                    if(curr.left != null)q.add(curr.left);
                    if(curr.right != null)q.add(curr.right);
                }
                result.add(max);
            }
            return result;
    }
}
