/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    //515. Find Largest Value in Each Tree Row
    //Using BFS
    //Time complexity : O(n)
    //Space is:  O(height of the tree)
    
    public List<Integer> largestValues(TreeNode root) {
        
        List<Integer> result = new ArrayList<>();
        if(root == null)
        return result;
        
        Queue<TreeNode> q = new LinkedList<>();
        q.add(root);
        
        while(!q.isEmpty()){
            int max = Integer.MIN_VALUE;
            int size = q.size();
            for(int i=0;i<size;i++){
            
                TreeNode current = q.poll();
                
                if(current.val > max)
                          max = current.val;
               if(current.left!=null)
                   q.add(current.left);
                if(current.right!=null)
                    q.add(current.right);
                
                
                }
            result.add(max);

        }
        return result;
    }
}